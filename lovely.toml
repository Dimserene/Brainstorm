[manifest]
version = "1.0.0"
dump_lua = true
priority = 0

[[patches]]
[patches.module]
source = "dkjson.lua"
before = "main.lua"
name = "dkjson"


[[patches]]
[patches.pattern]
target = "engine/controller.lua"
pattern = "if key == 'enter' then key = 'return' end"
position = "after"
payload = '''
local brainstorm = require("brainstorm")
if brainstorm.config.debug_mode == true then _RELEASE_MODE = false end
brainstorm.keyHandler(self, key, dt)
'''
match_indent = true
overwrite = false

[[patches]]
[patches.pattern]
target = "game.lua"
pattern = "G.FRAMES.MOVE = G.FRAMES.MOVE + 1"
position = "before"
payload = '''
local brainstorm = require("brainstorm")
brainstorm.update(dt)
'''
match_indent = true
overwrite = false

[[patches]]
[patches.pattern]
target = "functions/UI_definitions.lua"
pattern = "create_option_cycle({label = localize('b_set_gamespeed'),scale = 0.8, options = {0.5, 1, 2, 4}, opt_callback = 'change_gamespeed', current_option = (G.SETTINGS.GAMESPEED == 0.5 and 1 or G.SETTINGS.GAMESPEED == 4 and 4 or G.SETTINGS.GAMESPEED + 1)}),"
position = "at"
payload = '''
create_option_cycle({label = localize('b_set_gamespeed'),scale = 0.8, options = {0.5, 1, 2, 4, 8, 16, 32}, opt_callback = 'change_gamespeed', current_option = (G.SETTINGS.GAMESPEED == 0.5 and 1 or G.SETTINGS.GAMESPEED == 4 and 4 or G.SETTINGS.GAMESPEED == 8 and 5 or G.SETTINGS.GAMESPEED == 16 and 6 or G.SETTINGS.GAMESPEED == 32 and 7 or G.SETTINGS.GAMESPEED + 1)}),
'''
match_indent = true
overwrite = true

[[patches]]
[patches.pattern]
target = "functions/UI_definitions.lua"
pattern = "function G.UIDEF.settings_tab(tab)"
position = "after"
payload = '''
local brainstorm = require('brainstorm')
'''
match_indent = true
overwrite = false

[[patches]]
[patches.pattern]
target = "game.lua"
pattern = "local replace_card = Card(self.title_top.T.x, self.title_top.T.y, 1.2*G.CARD_W*SC_scale, 1.2*G.CARD_H*SC_scale, G.P_CARDS.S_A, G.P_CENTERS.c_base)"
position = "at"
payload = '''
local replace_card = Card(self.title_top.T.x, self.title_top.T.y, 1.2*G.CARD_W*SC_scale, 1.2*G.CARD_H*SC_scale, G.P_CENTERS.j_brainstorm, {order = 138,  unlocked = true, discovered = true, blueprint_compat = true, perishable_compat = true, eternal_compat = true, rarity = 3, cost = 10, name = "Brainstorm", pos = {x=7,y=7}, set = "Joker", effect = "Copycat", config = {}, unlock_condition = {type = 'discard_custom'}})
local brainstorm = require("brainstorm")
if brainstorm.config.pride_mode == true then replace_card:set_edition({polychrome = true}, true) end
'''
match_indent = true
overwrite = true

[[patches]]
[patches.pattern]
target = "functions/UI_definitions.lua"
pattern = "local t = create_UIBox_generic_options({back_func = 'options',contents = {create_tabs("
position = "before"
payload = '''
  tabs[#tabs+1] = {
    label = 'Brainstorm',
    tab_definition_function = (
      function(_brainstorm_settings)
        local brainstorm = require('brainstorm')
        return {n=G.UIT.ROOT, config={align = "cm", padding = 0.05, colour = G.C.CLEAR}, nodes={
          create_toggle({label = 'Debug Mode', ref_table = brainstorm.config, ref_value = 'debug_mode', callback = (
            function(_set_toggle)
              _RELEASE_MODE = brainstorm.config.debug_mode
            end
          )}),
        }}
      end
    ),
    tab_definition_function_args = 'Brainstorm'
  }
'''
match_indent = true
overwrite = false


[[patches]]
[patches.pattern]
target = "game.lua"
pattern = "init_localization()"
position = "before"
payload = '''
local brainstorm = require("brainstorm")
if brainstorm.config.pride_mode == true then 
  G.localization.misc.poker_hands['Straight Flush'] = "Gay Flush"
  G.localization.misc.poker_hands['Straight'] = "Gay"
  G.localization.misc.poker_hands['Royal Flush'] = "Royal Gay Flush"
end
'''
match_indent = true
overwrite = false

[[patches]]
[patches.pattern]
target = "game.lua"
pattern = "love.graphics.setCanvas(G.AA_CANVAS)"
position = "before"
payload = '''
local brainstorm = require("brainstorm")
if brainstorm.config.debug_mode == true then 
  love.graphics.push()
  love.graphics.setColor(G.C.DARK_EDITION[1],G.C.DARK_EDITION[2],G.C.DARK_EDITION[3],1)
  love.graphics.print("BRAINSTORM DEBUG_MODE", 10, 10+(_RELEASE_MODE and 0 or 20))
  love.graphics.pop()
end
'''
match_indent = true
overwrite = false

[[patches]]
[patches.pattern]
target = "game.lua"
pattern = "self.LANGUAGES = {"
position = "after"
payload = '''
['BU'] = {font = 1, label = "Balatro University", key = 'BU', beta = nil, button = "Language Feedback", warning = {'This language is still in Beta.', 'Click again to confirm'}},
'''
match_indent = true
overwrite = false

[[patches]]
[patches.pattern]
target = "game.lua"
pattern = "if not (love.filesystem.read('localization/'..G.SETTINGS.language..'.lua')) or G.F_ENGLISH_ONLY then"
position = "at"
payload = """
local brainstorm = require('brainstorm')
if not (love.filesystem.read('localization/'..G.SETTINGS.language..'.lua')) and not (brainstorm.buLanguage()) or G.F_ENGLISH_ONLY then
"""
match_indent = true
overwrite = true


[[patches]]
[patches.pattern]
target = "game.lua"
pattern = "if localization ~= nil then"
position = "before"
payload = '''
local brainstorm = require('brainstorm')
if G.SETTINGS.language == 'BU' then
  self.localization = assert(loadstring(brainstorm.buLanguage()))()
  init_localization()
end
'''
match_indent = true
overwrite = false

[[patches]]
[patches.pattern]
target = "game.lua"
pattern = "if localization ~= nil then"
position = "at"
payload = 'if localization ~= nil and G.SETTINGS.language ~= "BU" then'
match_indent = true
overwrite = true


[[patches]]
[patches.module]
source = "main.lua"
before = "main.lua"
name = "brainstorm"